// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Source: article.proto
//

import Connect
import Foundation
import SwiftProtobuf

internal protocol Example_V1_ArticleServiceClientInterface: Sendable {

    @available(iOS 13, *)
    func `listArticles`(request: Example_V1_ListArticlesRequest, headers: Connect.Headers) async -> ResponseMessage<Example_V1_ListArticlesResponse>

    @available(iOS 13, *)
    func `getArticle`(request: Example_V1_GetArticleRequest, headers: Connect.Headers) async -> ResponseMessage<Example_V1_GetArticleResponse>
}

/// Concrete implementation of `Example_V1_ArticleServiceClientInterface`.
internal final class Example_V1_ArticleServiceClient: Example_V1_ArticleServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    internal init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    internal func `listArticles`(request: Example_V1_ListArticlesRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Example_V1_ListArticlesResponse> {
        return await self.client.unary(path: "/example.v1.ArticleService/ListArticles", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getArticle`(request: Example_V1_GetArticleRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Example_V1_GetArticleResponse> {
        return await self.client.unary(path: "/example.v1.ArticleService/GetArticle", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    internal enum Metadata {
        internal enum Methods {
            internal static let listArticles = Connect.MethodSpec(name: "ListArticles", service: "example.v1.ArticleService", type: .unary)
            internal static let getArticle = Connect.MethodSpec(name: "GetArticle", service: "example.v1.ArticleService", type: .unary)
        }
    }
}
