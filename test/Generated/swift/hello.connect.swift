// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Source: hello.proto
//

import Connect
import Foundation
import SwiftProtobuf

internal protocol Example_V1_HelloServiceClientInterface: Sendable {

    @available(iOS 13, *)
    func `sayHello`(request: Example_V1_HelloRequest, headers: Connect.Headers) async -> ResponseMessage<Example_V1_HelloResponse>
}

/// Concrete implementation of `Example_V1_HelloServiceClientInterface`.
internal final class Example_V1_HelloServiceClient: Example_V1_HelloServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    internal init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    internal func `sayHello`(request: Example_V1_HelloRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Example_V1_HelloResponse> {
        return await self.client.unary(path: "/example.v1.HelloService/SayHello", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    internal enum Metadata {
        internal enum Methods {
            internal static let sayHello = Connect.MethodSpec(name: "SayHello", service: "example.v1.HelloService", type: .unary)
        }
    }
}
