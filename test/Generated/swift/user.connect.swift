// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Source: user.proto
//

import Connect
import Foundation
import SwiftProtobuf

internal protocol Example_V1_UserServiceClientInterface: Sendable {

    @available(iOS 13, *)
    func `createUser`(request: Example_V1_CreateUserRequest, headers: Connect.Headers) async -> ResponseMessage<Example_V1_CreateUserResponse>

    @available(iOS 13, *)
    func `getUser`(request: Example_V1_GetUserRequest, headers: Connect.Headers) async -> ResponseMessage<Example_V1_GetUserResponse>
}

/// Concrete implementation of `Example_V1_UserServiceClientInterface`.
internal final class Example_V1_UserServiceClient: Example_V1_UserServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    internal init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    internal func `createUser`(request: Example_V1_CreateUserRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Example_V1_CreateUserResponse> {
        return await self.client.unary(path: "/example.v1.UserService/CreateUser", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    internal func `getUser`(request: Example_V1_GetUserRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Example_V1_GetUserResponse> {
        return await self.client.unary(path: "/example.v1.UserService/GetUser", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    internal enum Metadata {
        internal enum Methods {
            internal static let createUser = Connect.MethodSpec(name: "CreateUser", service: "example.v1.UserService", type: .unary)
            internal static let getUser = Connect.MethodSpec(name: "GetUser", service: "example.v1.UserService", type: .unary)
        }
    }
}
